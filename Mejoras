import os
import pandas as pd

class CryptoDataHandler:
    
    def __init__(self, directory='archive'):
        """
        Inicializa la clase con el directorio predeterminado 
        donde se encuentran los archivos CSV.
        
        Args:
        - directory (str): Directorio donde se encuentran los archivos CSV.
                           Por defecto es 'archive'.
        """
        self.current_dir = os.getcwd()
        self.csv_directory = os.path.join(self.current_dir, directory)
        
        
    def extract_csv_files(self):
        """
        Extrae y combina los datos de todos los archivos CSV 
        presentes en el directorio especificado.
        
        Returns:
        - combined_df (DataFrame): DataFrame combinado que contiene los 
                                    datos de todos los archivos CSV.
        """
        dfs = []
        for file in os.listdir(self.csv_directory):
            if file.endswith('.csv'):
                df = pd.read_csv(os.path.join(self.csv_directory, file))
                dfs.append(df)
        combined_df = pd.concat(dfs, ignore_index=True)
        return combined_df
        
    def format_data(self, dfs):
        """
        Formatea los datos de los DataFrames para su presentación o análisis.
        
        Args:
        - dfs (list): Lista de DataFrames que se van a formatear.
        
        Returns:
        - formatted_data (list): Lista de diccionarios con información 
                                 formateada de los DataFrames.
        """
        formatted_data = []
        for df in dfs:
            formatted_data.append({
                'nombre_archivo': df,  # Se podría cambiar esto por el nombre real del archivo
                'contenido': df.head().to_string(),  # Muestra las primeras filas de datos como string
                'informacion': df.info(),  # Muestra información sobre el DataFrame
                'descripcion': df.describe()  # Muestra estadísticas descriptivas del DataFrame
            })
        return formatted_data
